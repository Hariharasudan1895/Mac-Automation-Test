name: Paltalk Mac Automation

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-mac-automation:
    runs-on: self-hosted   # Your Mac runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check and install Node.js & npm
        run: |
          echo "Checking if Node.js and npm are installed..."

          if command -v node >/dev/null 2>&1 && command -v npm >/dev/null 2>&1; then
            echo "✅ Node.js and npm already installed."
            node -v
            npm -v
          else
            echo "⚙️ Installing Node.js and npm using curl..."
            NODE_VERSION="20.6.1"  # change to latest LTS if needed
            ARCH=$(uname -m)
            if [ "$ARCH" = "arm64" ]; then
              NODE_DISTRO="node-v${NODE_VERSION}-darwin-arm64"
            else
              NODE_DISTRO="node-v${NODE_VERSION}-darwin-x64"
            fi

            curl -O "https://nodejs.org/dist/v${NODE_VERSION}/${NODE_DISTRO}.tar.gz"

            # Extract
            tar -xzf "${NODE_DISTRO}.tar.gz"

            # Move to /usr/local
            sudo mv "${NODE_DISTRO}" /usr/local/node

            # Add node to PATH
            export PATH=/usr/local/node/bin:$PATH
            echo 'export PATH=/usr/local/node/bin:$PATH' >> ~/.bash_profile

            echo "✅ Node.js and npm installed successfully!"
            /usr/local/node/bin/node -v
            /usr/local/node/bin/npm -v
          fi

      - name: Verify Paltalk bundle ID
        run: |
          echo "Checking bundle ID for Paltalk..."
          osascript -e 'id of app "Paltalk"'

      - name: Ensure Appium + mac2 driver installed
        run: |
          echo "Installing Appium + mac2 driver..."
          npm install -g appium@next
          appium driver install mac2 || true
          echo "Installed Appium drivers:"
          appium driver list --installed

      - name: Start Appium server in background
        run: |
          echo "Starting Appium server..."
          nohup appium --address 127.0.0.1 --port 4723 --log-level debug > appium.log 2>&1 &
          echo $! > appium.pid
          sleep 10
          echo "Appium started with PID: $(cat appium.pid)"

      - name: Tail Appium logs (background)
        run: |
          echo "Tailing Appium logs..."
          nohup tail -f appium.log > appium-tail.log 2>&1 &

      - name: Run automation JAR
        run: |
          echo "Running automation tests..."
          java -jar Mac_runnable.jar | tee automation.log

      - name: Stop Appium Server
        if: always()
        run: |
          if [ -f appium.pid ]; then
            echo "Stopping Appium server..."
            kill -9 $(cat appium.pid) || true
            rm -f appium.pid
          fi

      - name: Upload Logs and Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mac-automation-artifacts
          path: |
            appium.log
            appium-tail.log
            automation.log
            reports/

  publish-report:
    needs: run-mac-automation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Test Reports
        uses: actions/download-artifact@v4
        with:
          name: mac-automation-artifacts
          path: ./reports

      - name: Set Report URL
        run: |
          echo "REPORT_URL=artifact://mac-automation-artifacts/reports/onboarding.html" >> $GITHUB_ENV
          echo "Report available at $REPORT_URL"
